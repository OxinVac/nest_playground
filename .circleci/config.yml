version: 2.1

executors:
  nodejs:
    docker:
      - image: circleci/node:14

.only-master: &only-master
  filters:
    branches:
      only:
        - master

.only-staging: &only-staging
  filters:
    branches:
      only:
        - staging

.only-feature: &only-feature
  filters:
    branches:
      only:
        - feature/*

.working_directory: &working_directory
  working_directory: ~/workspace

.directory: &directory
  working_directory: ~/workspace

.container_executor: &container_executor
  docker:
    - image: circleci/python:3.8.8-node

jobs:

  checkout-code:
    <<: *directory
    docker:
      - image: circleci/node:14
    steps:
      - checkout
      - persist_to_workspace:
          root: ~/
          paths:
            - workspace

  bundle-dependencies:
    <<: *directory
    docker:
      - image: circleci/node:14
    steps:
      - attach_workspace:
          at: ~/
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "yarn.lock" }}
      - run:
          name: Install Dependencies
          command: yarn install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "yarn.lock" }}
      - persist_to_workspace:
          root: ~/
          paths:
            - workspace

  run-lint:
    <<: *directory
    docker:
      - image: circleci/node:14
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: 'Run yarn lint'
          command: yarn lint

  run-e2e:
    <<: *directory
    docker:
      - image: circleci/node:14
      - image: mongo:4.1.6-xenial
      - image: circleci/postgres:9.6.2-alpine
        environment:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: root
          POSTGRES_DB: circle-test_test
    steps:
      - attach_workspace:
          at: ~/
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "yarn.lock" }}
      - setup_remote_docker
      - run:
          name: Waiting for Mongo
          command: dockerize -wait tcp://localhost:27017 -timeout 1m
      - run:
          name: Waiting for Postgres
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: 'Run E2E Tests'
          command: yarn run test:e2e --maxWorkers=2

  run-unit:
    <<: *directory
    docker:
      - image: circleci/node:14
      - image: mongo:4.1.6-xenial
      - image: circleci/postgres:9.6.2-alpine
        environment:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: root
          POSTGRES_DB: circle-test_test
    steps:
      - attach_workspace:
          at: ~/
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "yarn.lock" }}
      - setup_remote_docker
      - run:
          name: Waiting for Mongo
          command: dockerize -wait tcp://localhost:27017 -timeout 1m
      - run:
          name: Waiting for Postgres
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: 'Run Unit Tests'
          command: yarn run test --maxWorkers=2

  build-feature:
    <<: *container_executor
    <<: *working_directory
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - run: echo "Deploy feature..."

  build-staging:
    <<: *container_executor
    <<: *working_directory
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - run: echo "Deploy staging..."

  build-master:
    <<: *container_executor
    <<: *working_directory
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - run: echo "Deploy master..."

workflows:
  pipeline:
    jobs:
      - checkout-code
      - bundle-dependencies:
          requires:
            - checkout-code
      - run-lint:
          context:
            - NESTJS_PLAYGROUND
          requires:
            - bundle-dependencies
      - run-e2e:
          context:
            - NESTJS_PLAYGROUND
          requires:
            - bundle-dependencies
      - run-unit:
          context:
            - NESTJS_PLAYGROUND
          requires:
            - bundle-dependencies
      - build-feature:
          <<: *only-feature
          requires:
            - run-e2e
            - run-unit
            - run-lint
      - build-staging:
          <<: *only-staging
          requires:
            - run-e2e
            - run-unit
            - run-lint
      - build-master:
          <<: *only-master
          type: approval